Куки (cookies) - это небольшие текстовые файлы, которые веб-сайты сохраняют на вашем компьютере, когда вы их посещаете.
Когда вы снова посещаете тот же веб-сайт, ваш браузер отправляет эти файлы на сервер, чтобы веб-сайт мог "вспомнить" некоторую информацию о вас.

Например, куки могут использоваться для запоминания того, что вы вошли в систему на веб-сайте, чтобы вас не приходилось вводить свои учетные данные каждый раз.
Они также могут запомнить, какие предпочтения вы установили на сайте, такие как языковые настройки или настройки отображения,
ну или запомнить какой товар положили в корзину.

В реальной жизни, для автоматизации тестирования одна из самых главных областей применения куков, это логин в аккаунт,
т.е авторизация. Их использование позволяет не логиниться каждый раз через форму логину на сайт.

Давайте в первую очередь, научимся получать куки, для этого используем методы get_cookie() для получения конкретной куки
или get_cookies() в случае когда нам нужно получить все куки на сайте.

driver.get_cookie("name") # Вернет куку name или любую другую указанную в качестве аргумента
driver.get_cookies() # Вернет список словарей, все куки
Пример вывода get_cookie(”accept_terms_time”) с сайта https://freeconferencecall.com:

{'domain': 'www.freeconferencecall.com', 'expiry': 1704917080, 'httpOnly': False, 'name': 'accept_terms_time', 'path': '/', 'sameSite': 'Lax', 'secure': True, 'value': '1669733751'}
Пример вывода get_cookies():

[{'domain': '.freeconferencecall.com', 'expiry': 1670443418, 'httpOnly': False, 'name': '_uetsid', 'path': '/', 'secure': False, 'value': '11c3f78075a111ed841aa76b571b5738'}, {'domain': 'www.freeconferencecall.com', 'expiry': 1704917016, 'httpOnly': False, 'name': 'accept_terms_time', 'path': '/', 'sameSite': 'Lax', 'secure': True, 'value': '1669733751'}, {'domain': 'www.freeconferencecall.com', 'httpOnly': True, 'name': '_freeconferencecall_session', 'path': '/', 'sameSite': 'Lax', 'secure': True, 'value': 'fMlK6YulVkYYpvRugPP6C07BaonIfSFgNu6cIYUFncxXhlTPJRMasw%2BMKgCDLKA%2B%2FaONux7%2BcjYDkte7iqusbt1lWHlE1AujR7CD6QwO4x7IjgXVyrq3vW9hDGEI0ZPFclhTTbQc9ZVh3EdvgQWeawrZUi9H81dP%2FGCxvKtC5vvslHQfUOOpeYhJJRA4wU6Q3KJqkX5bw6JCFHCvnJEZMxQvShyEitqJ%2BRC5s5AYhcvmvKxZN399uU2cSoNzAfL%2BYSqj5I5Vjn9D9Q1LSj3vahks7HiV6jo03SX%2B%2F15VvIcuniPAlPhgvbqz4%2B6IZsDT2c%2F86YaO4fzotfm0fzgOTqwMLNuR%2Fdc2Iixpef7WLAOpuew%2BH87Tud%2F7A%2F2Ex40lzhMEEQnnHJchWtemY1kla09Galc%2BRZQ7RgLX%2BdTv%2BuAvSUeGwNE%2FQ8naQzn%2BP2k%3D--6pglPEG%2B3WFPoUzC--n%2BZm%2F8hr5zaZPmvbqh%2BYFA%3D%3D'}, {'domain': '.freeconferencecall.com', 'expiry': 1704053018, 'httpOnly': False, 'name': '_uetvid', 'path': '/', 'secure': False, 'value': '11c3fc9075a111ed9344f7bf9100a1f9'}, {'domain': '.freeconferencecall.com', 'expiry': 1670357076, 'httpOnly': False, 'name': '_gat', 'path': '/', 'secure': False, 'value': '1'}, {'domain': '.freeconferencecall.com', 'expiry': 1670443418, 'httpOnly': False, 'name': '_gid', 'path': '/', 'secure': False, 'value': 'GA1.2.879386848.1670357016'}, {'domain': '.freeconferencecall.com', 'expiry': 1704917018, 'httpOnly': False, 'name': '_ga', 'path': '/', 'secure': False, 'value': 'GA1.2.1226014009.1670357016'}, {'domain': '.freeconferencecall.com', 'expiry': 1678133016, 'httpOnly': False, 'name': '_gcl_au', 'path': '/', 'secure': False, 'value': '1.1.192288347.1670357016'}, {'domain': 'www.freeconferencecall.com', 'httpOnly': False, 'name': 'locale', 'path': '/', 'sameSite': 'Lax', 'secure': True, 'value': 'en'}, {'domain': 'www.freeconferencecall.com', 'expiry': 1701893015, 'httpOnly': True, 'name': 'split', 'path': '/', 'sameSite': 'Lax', 'secure': True, 'value': 'eyJfcmFpbHMiOnsibWVzc2FnZSI6IklqQmtNVFU0WVdFekxUYzBZVFV0TkRJNE1TMWhaV000TFRRMk0ySXlPVEkyT0dVNU5TST0iLCJleHAiOiIyMDIzLTEyLTA2VDIwOjAzOjM1LjEyNVoiLCJwdXIiOiJjb29raWUuc3BsaXQifX0%3D--bd8743dc60f7cb68b6f34bd64a76bfe8c4936f36'}, {'domain': 'www.freeconferencecall.com', 'httpOnly': True, 'name': 'country_code', 'path': '/', 'sameSite': 'Lax', 'secure': True, 'value': 'us'}]

Тут тоже все просто, для добавления куков используется метод add_cookie(), но тут в качестве аргумента принимается словарь. Для полного понимания, давайте сделаем все на примере.

driver.get("https://www.freeconferencecall.com/en/us/login")
driver.get_cookies()
В выводе мы получим список с куками, ранее мы уже разобрали данный момент.
Теперь добавим собственную куку, я рекомендую брать одну из ранее полученного списка и использовать ее в качестве шаблона, просто прописывая name и value. Создадим куку с именем Example и значением Kukushka:

driver.add_cookie({
    'name': 'Example',
    'value': 'Kukushka'
})
После добавления попробуем получить куку по имени:

print(driver.get_cookie("Example"))
И в результате получим добавленную куку:

{'domain': '.www.freeconferencecall.com', 'httpOnly': False, 'name': 'Example', 'path': '/', 'secure': True, 'value': 'Kukushka'}

Тут все аналогично добавлению, просто перед добавлением удаляйте старую куку, используя либо метод delete_cookie("name")
для удаления определенной куки, либо delete_all_cookies() для удаления вообще всех куков.

Допустим мы ранее добавили куку Example

driver.add_cookie({
    'name': 'Example',
    'value': 'Kukushka'
})
А потом в ходе тестирования вы решили ее заменить, имя или значение, неважно. Для этого удалим ее и по сути добавим новую куку:

driver.delete_cookie("Example")
driver.add_cookie({
    'name': 'Example',
    'value': 'More'
})

Давайте разберем, что вообще делать с куками, как использовать и т.д, рассмотрим как раз сценарий с логином в аккаунт.

Для работы с куками, существует специальная библиотека pickle, давайте для начала ее импортируем.

import pickle
Для начала необходимо залогиниться в какой-либо аккаунт, возьмем все тот же сайт https://www.freeconferencecall.com/en/us/login для примера. Предварительно создав там аккаунт.

driver.get("https://www.freeconferencecall.com/en/us/login")

LOGIN_FIELD = ("xpath", "//input[@id='login_email']")
PASSWORD_FIELD = ("xpath", "//input[@id='password']")
SUBMIT_BUTTON = ("xpath", "//button[@id='loginformsubmit']")

# Логинимся в аккаунт
driver.get("https://www.freeconferencecall.com/en/us/login")
driver.find_element(*LOGIN_FIELD).send_keys("autocheck@ya.ru")
driver.find_element(*PASSWORD_FIELD).send_keys("123")
driver.find_element(*SUBMIT_BUTTON).click()
После, мы сохраним куки в файл, он должен быть специального формата .pkl так как это наиболее корректный способ хранения куков.

Создадим в проекте папку /cookies и уже в ней автоматически будет создаваться файл с куками cookies.pkl (называйте как угодно)

Получается следующая иерархия:

|- lesson_9
    |- cookies
        |- cookies.pkl
Теперь займемся сохранением куков в файл, для этого в библиотеке pickle есть метод dump(что, куда, операция),
соответсвенно он принимает в себя аргументы того, что будем записывать/читать, куда записывать/откуда читать и сама операция запись/чтение.

pickle.dump(driver.get_cookies(), open(os.getcwd() + "/cookies/cookies.pkl", "wb"))
Разберем аргументы для полного понимания:

➖ driver.get_cookies() - вернут нам все куки.
➖ open(os.getcwd() + "/cookies/cookies.pkl") - указатель места для записи или чтения.
➖ “wb” (write binary) - запись в бинарном формате (не заморачивайтесь) главное понимать, что это запись.

Соберем код в единое целое:

# Прописываются все импорты
import pickle
import os


# Инициализация драйвера
...

driver.get("https://www.freeconferencecall.com/en/us/login")

LOGIN_FIELD = ("xpath", "//input[@id='login_email']")
PASSWORD_FIELD = ("xpath", "//input[@id='password']")
SUBMIT_BUTTON = ("xpath", "//button[@id='loginformsubmit']")

# Логинимся в аккаунт
driver.get("https://www.freeconferencecall.com/en/us/login")
driver.find_element(*LOGIN_FIELD).send_keys("autocheck@ya.ru")
driver.find_element(*PASSWORD_FIELD).send_keys("123")
driver.find_element(*SUBMIT_BUTTON).click()

# Сохраняем куки в файл
pickle.dump(driver.get_cookies(), open(os.getcwd() + "/cookies/cookies.pkl", "wb"))
В результате, у нас создастся файл cookies.pkl и если мы откроем его, то получим страшную картину:

���]�(}�(�domain��.freeconferencecall.com��expiry�J�ѐc�httpOnly���name��_uetsid��path��/��secure���value�� 17e67eb0758e11eda9e2711d38ba6ca1�u}�(h�www.freeconferencecall.com�hJB؞eh�h�accept_terms_time�hh	�sameSite��Lax�h
�h�
1669733751�u}�(h�www.freeconferencecall.com�h�h�_freeconferencecall_session�hh	h�Lax�h
�hXayAfWwNpmR9iRA35DcbcI82RMWwR4qi%2FdVSi%2B52da3ERnimRr3aBJpwTeGvx6dd4KQtjR%2BY17nEcD45GnhBeCBo%2B40YRLliqMIJmqdmTdhg1a9%2F6U3afa1GLDbESQ4Nu2wewpK1vXulCi6WlMQqw%2F9d0ScabSi2dqfNi8KF3mYCbUENAjTxtOeYH2od9cplInORrKodRFjq24TcuCreYkcF06phmd3K7v%2FdGg1hbZQD%2FrfOf1BmZcWDZFgAVZmkMUNyvnHG2V%2F%2FESVH7FAOvmOqeZCdFfAYU%2B896f4gT7647%2BmCPzXDDthl33ED6hkx6Jsekfnx%2F0p7bKzzwiK6gum1im2KeTSchYskiwqb7S2cXmjVuMzRQTDq2udMBflULkON133a5gvLXFZW15mzBgNXUe8NTOM2sFy%2BAqK8GMSpOL07XnVO2Z775aXYoPA4%3D--g%2FSAF3HKs5fEK0P8--yYyrZwyTCdowPus8I9W4%2Fg%3D%3D�u}�(h�.freeconferencecall.com�hJD��eh�h�_uetvid�hh	h
�h� 17e68640758e11eda008c544805634a4�u}�(h�.freeconferencecall.com�hJ}��ch�h�_gat�hh	h
�h�1�u}�(h�.freeconferencecall.com�hJ�ѐch�h�_gid�hh	h
�h�GA1.2.122505852.1670348866�u}�(h�.freeconferencecall.com�hJD؞eh�h�_ga�hh	h
�h�GA1.2.1823985980.1670348866�u}�(h�.freeconferencecall.com�hJB'dh�h�_gcl_au�hh	h
�h�1.1.1574912369.1670348866�u}�(h�www.freeconferencecall.com�h�h�locale�hh	h�Lax�h
�h�en�u}�(h�www.freeconferencecall.com�hJ��peh�h�split�hh	h�Lax�h
�h��eyJfcmFpbHMiOnsibWVzc2FnZSI6IkltSmxNVFptWXpVekxUQXlaamN0TkRkbVl5MWhZVEprTFRZM05ESmtaREl5WXpaalpDST0iLCJleHAiOiIyMDIzLTEyLTA2VDE3OjQ3OjQ1LjA2NFoiLCJwdXIiOiJjb29raWUuc3BsaXQifX0%3D--865692739bd8255beafaf3588bb40da1c2bb78c0�u}�(h�www.freeconferencecall.com�h�h�country_code�hh	h�Lax�h
�h�us�ue.
Это куки в бинарной кодировке, не обращайте внимания, для нас это вообще не важно, главное они записались.

Теперь пришло время научиться переиспользовать куки, чтобы больше не вводить каждый раз логин и пароль. Тут все просто,
перед тем как подставить/подгрузить куки, необходимо почистить все куки на странице, чтобы не было наложения.

driver.get("https://www.freeconferencecall.com/login")
driver.delete_all_cookies()
После этого, считаем из файла с куками все данные и запишем в переменную с помощью метода pickle.load(что, операция)

cookies = pickle.load(open(os.getcwd()+"/cookies/cookies.pkl", "rb"))
Разберем аргументы:

➖ open(os.getcwd() + "/cookies/cookies.pkl") - указываем путь к файлу с ранее записанными куками.
➖ “rb” (read binaries) - прочитать данные в бинарном формате.

Так как куки это список словарей, нам необходимо добавлять куки по одной, чтобы не было проблем, соответсвенно тут мы
используем простой цикл for для перебора списка:

for cookie in cookies:
    driver.add_cookie(cookie)
Ну и последний шаг, это сделать запрос, т.е перейти на ресурс уже залогиненного пользователя или просто перезагрузить
страницу, но лучше все же первое, в таком случае куки подтянуться и все сработает.

К примеру, перейдем на страницу профиля.

driver.get("https://www.freeconferencecall.com/profile")
Итоговый код будет следующим:

# Прописываются все импорты
import pickle
import os


# Инициализация драйвера
...

# Открываем страницу логина
driver.get("https://www.freeconferencecall.com/profile")

# Чистим все куки
driver.delete_all_cookies()

# Записываем куки из файла в переменную
cookies = pickle.load(open(os.getcwd()+"/cookies/cookies.pkl", "rb"))

# Добавляем по одной куке из списка
for cookie in cookies:
    driver.add_cookie(cookie)

# Делаем запрос на любую страницу залогиненного пользователя
driver.get("https://www.freeconferencecall.com/profile")
Готово)