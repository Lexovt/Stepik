Опции браузера - это по сути его настройки перед запуском (возможности браузера), в будущем, мы разберем много разных опций,
но начнем с самых распространенных.
В первую очередь, необходимо создать обьект для опций, до инициализации драйвера.

options = webdriver.ChromeOptions()
Теперь мы можем обявить нашу первую опцию, используя специальный метод:

options.add_argument("")
Внутри кавычек, необходимо прописать нужную нам опцию, давайте изучим первую и научимся запускать браузер в режиме невидимки.
Для этого используем опцию —headless, можно перевести, как без головы)

# Опции браузера
options = webdriver.ChromeOptions()
options.add_argument("--headless")

# Инициализация драйвера
service = Service(ChromeDriverManager().install())
driver = webdriver.Chrome(service=service, options=options)

driver.get("https://ya.ru")
Обязательно прокиньте созданный обьект options в аргументы Chrome в виде options=options

driver = webdriver.Chrome(service=service, options=options)
Теперь если попробуете запустить такой код, то увидите, что браузер как будто не работает, но на деле он откроется в фоне.
Вопрос, для чего это нужно? Для ускорения автоматизации и в будущем для CI/CD)

➖ Безголовый режим "--headless" - запускает браузер в режиме без графического интерфейса. Это позволяет выполнять тесты в
фоновом режиме без отображения окна браузера.

➖ Режим инкогнито "--incognito" - запускает браузер в режиме инкогнито (приватного просмотра). Это позволяет тестировать поведение
сайта без использования кэша и сохраненных данных.

➖ Игнорирование ошибок сертификатов "--ignore-certificate-errors" - игнорирует ошибки сертификата SSL при загрузке
защищенных (HTTPS) страниц.

➖ Размер окна браузера "--window-size=X,Y" - устанавливает размер окна браузера. Можно указать ширину и высоту в
пикселях. Например, --window-size=1280,800.

➖ Отключение кеширования "--disable-cache" - отключает кэширование в браузере. Это позволяет загружать каждый ресурс
(например, изображения, стили, скрипты) с сервера при каждой загрузке страницы.

Существует такая вещь, как стратегия загрузки страницы, она нужна для того, чтобы Selenium понимал стоит ли ему ждать загрузки всех компонентов страницы, какую-то часть или вообще ничего не ждать.
Cуществует три типа стратегии загрузки:
➖ normal - используется по дефолту и ожидает загрузки всех ресурсов (картинки, js-код, шрифты и т.д) на странице.
➖ eager - ожидает только готовности загрузки DOM (html-структуры), но при этом картинки и прочее может до сих пор грузиться.
➖ none - Вообще ничего не ждет, не знаю зачем это придумали ахха

Применить определенную стратегию, можно используя ранее изученную тему про опции.
1. Реализация normal strategy:

options = Options()
options.page_load_strategy = 'normal'

service = Service(ChromeDriverManager().install())
driver = webdriver.Chrome(service=service, options=options)
driver.get("https://whatismyipaddress.com/")
При запуске этого когда, мы увидим, что браузер не закроется, пока все ресурсы страницы не будут загружены.

2. Реализация eager strategy:

options = Options()
options.page_load_strategy = 'eager'

service = Service(ChromeDriverManager().install())
driver = webdriver.Chrome(service=service, options=options)
driver.get("https://whatismyipaddress.com/")
При запуске такого кода, мы уже визуально заметим, что браузер закрывается еще не дождавшись подгрузки картинок например.

3. Реализация none strategy:

options = Options()
options.page_load_strategy = 'none'

service = Service(ChromeDriverManager().install())
driver = webdriver.Chrome(service=service, options=options)
driver.get("https://whatismyipaddress.com/")
В таком случае, вы ничего не увидите.