Начнем с загрузки файлов, тут все удивительно и максимально просто, но и нюансы тоже есть.
Для загрузки файлов на сайт используется уже сильно знакомый нам метод send_keys(), и принимает в качестве аргумента путь до нужного файла.
На самом деле, загрузка файлов на сайтах реализована тегом <input>, но выделяется он специальным атрибутом <input type=”file”/> .
Давайте попробуем загрузить файл на сайт, для примера возьмем форму с сайта для практики: https://demoqa.com/upload-download
Тут мы можем увидеться такую кнопку “choose file”:

Проверим кнопку через DevTools и увидим следующее:
А именно, мы видим, что у тега input как раз таки есть атрибут type=”file” - это то что нужно!
Переходим к коду:

driver.get("https://demoqa.com/upload-download")
# Записываем поле ввода в переменную
upload_file_field = driver.find_element(By.XPATH, "//input[@id='uploadFile']")
# Загружаем картинку
upload_file_field.send_keys("АБСОЛЮТНЫЙ ПУТЬ+/files/picture.jpg")
time.sleep(5)
В результате мы увидем успешно загруженный файл:

Я рекомендую использовать os.path.join(os.getcwd(), "имя_файла") для того, чтобы путь к файлу не зависел от вашей ОС, что в
дальнейшем позволит запускать тесты где угодно.

os.path.join(os.getcwd(), "имя_файла") - возвращает путь до текущей директрии независимо от системы и вернет что-то вроде:
 /Users/manikosto/Documents/SeleniumClasses/lesson_6/picture.jpg

Пример:
import os element.send_keys(os.path.join(os.getcwd(), "picture.jpg"))


Нюансы при загрузке файлов
Зачастую загрузку файлов могу реализовывать через кнопку, но это кнопка и попытаясь проверить ее через DevTools,
станет непонятно, как же тогда загрузить файл, тут и открывается один нюанс.
На самом деле, элементы для непосредственно загрузки файлов скрыты! Но мы можем найти их по поиску в DevTools,
так как мы знаем что нам нужен input с атрибутом type=”file”
Используем для поиска Xpath и уоля:
Теперь со спокойной душой можно загружать в него нужный нам файл, хотя input и невидим.


Давайте откроем сайт http://the-internet.herokuapp.com/download
Мы увидим, что для скачивания файлов, казалось бы, ничего не нужно, достаточно кликнуть по ссылке и все, ведь руками все работает, но…
Помним, что мы работаем с WebDriver, и тут в явном виде нужно указывать все опции, для того куда по умолчанию мы хотим скачивать файлы тоже.
Да, у вас сработает простой клик, и файл скачается, но вот только куда…
Создадим папку downloads в нашем проекте, туда и будем складывать скачанные файлы:

|- lesson_6
    |- downloads
Теперь все готово, можно приступать к настройке браузера через код, для этого мы создадим словарь preferences и положим в него нужные настройки.

preferences = {
    "download.default_directory" : os.path.join(os.getcwd(), "downloads") # Универсальный путь для всех систем
}
Таким образом, мы указываем браузеру, куда по дефолту нужно сохранять файлы.
Теперь нужно все это как-то передать внутрь браузера, и сделаем мы это через наши уже любимые Options()

options = Options()
preferences = {
    "download.default_directory" : os.path.join(os.getcwd(), "downloads")
}
options.add_experimental_option("prefs", preferences)

Замечу, что тут мы не использовали options.add_argument() , потому что добавление настроек является экспериментальной фичей,
поэтому мы явно указываем add_experimental_option, а “prefs” - это ключевое слово в качестве первого аргумента, оно не меняется,
вторым же аргументом идет наш словарь настроек.
Это нужно просто помнить, но запоминать особо необязательно, так как в реальном проекте вы напишете это один раз и больше,
вероятно, никогда на эти строчки и не взгляните)

Посмотрим на конечный код:

# Инициализируем опции
options = Options()
preferences = {
    "download.default_directory" : os.path.join(os.getcwd(), "downloads")
}
options.add_experimental_option("prefs", preferences)
service = Service(ChromeDriverManager().install())
# Добавляем опции в браузер
driver = webdriver.Chrome(service=service, options=options)
# Открываем страницу для скачивания файлов
driver.get("http://the-internet.herokuapp.com/download")
# Найдем все элементы и кликнем на любой
ELEMENTS = driver.find_elements(By.XPATH, "//a")
ELEMENTS[7].click()

Нюанс 1:

Для пользователей Windows, все пути к файлам и т.д, необходимо прописывать с обратным слешем! Иногда даже с двойным.
Пример:
preferences = {
    "download.default_directory" : os.getcwd() + "\downloads",
    "safebrowsing.enabled" : False
}
 Нюанс 2:
Зачастую загрузку файлов могут реализовывать через кнопку, но это кнопка и попытаясь проверить ее через DevTools, станет непонятно,
как же тогда загрузить файл, тут и открывается один нюанс.
На самом деле, элементы для непосредственно загрузки файлов скрыты! Но мы можем найти их по поиску в DevTools,
так как мы знаем что нам нужен input с атрибутом type=”file”
Используем для поиска Xpath:
Теперь со спокойной душой можно загружать в него нужный нам файл, хотя input и невидим.