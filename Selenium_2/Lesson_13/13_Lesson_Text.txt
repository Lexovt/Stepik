Alert - это обычное предупреждающее или требующее подтверждения окно, появляется в случае нажатия на вызывающую алерт
кнопку, либо автоматически при заходе какой-то сайт, к примеру мы будем работать с https://demoqa.com/alerts

Выглядит он следующим образом:
Работа с алертами, максимально простая, у него не так много методов, но есть у него один нюанс, это не веб-элемент и его не найти в DOM.
 Для этого нам необходимо применить другой подход, а именно переключиться на alert.

Для переключения существует специальный метод switch_to.alert.

Давайте определим алгоритм действий, чтобы все было понятно:

Нажмем на кнопку, которая инициирует появление alert
Дождемся появления alert с помощью явного ожидания
Переключимся на него и начнем действовать
import time

from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

# Создание экземпляра веб-драйвера
service = Service(ChromeDriverManager(version="114.0.5735.90").install())
driver = webdriver.Chrome(service=service)
wait = WebDriverWait(driver, 10, poll_frequency=1)

# Переход на веб-страницу
driver.get("https://demoqa.com/alerts")

# Клик на кнопку, которая вызывает alert
BUTTON_1 = ("xpath", "//button[@id='alertButton']")
wait.until(EC.element_to_be_clickable(BUTTON_1)).click()

# Ожидание появления alert и запись его в переменную для дальнейшего взаимодействия
alert = wait.until(EC.alert_is_present())

# Переключение на alert
driver.switch_to.alert

Для принятия и отклонения существуют два метода, соответсвенно это accept() и dismiss()

Теперь попробуем принять alert:
...
# Клик на кнопку, которая вызывает alert
BUTTON_3 = ("xpath", "//button[@id='confirmButton']")
wait.until(EC.element_to_be_clickable(BUTTON_3)).click()

alert = wait.until(EC.alert_is_present())
driver.switch_to.alert
alert.accept() # Принимаем алерт
Отлично, пробуем отклонить:

...

# Клик на кнопку, которая вызывает alert
BUTTON_3 = ("xpath", "//button[@id='confirmButton']")
wait.until(EC.element_to_be_clickable(BUTTON_3)).click()
alert = wait.until(EC.alert_is_present())
driver.switch_to.alert
alert.dismiss() # Отклоняем алерт

Если вдруг, вам необходимо получить содержимое алерта, то тут мы просто обращаемся к параметру text.

...

# Клик на кнопку, которая вызывает alert
BUTTON_4 = ("xpath", "//button[@id='promtButton']")
wait.until(EC.element_to_be_clickable(BUTTON_4)).click()
alert = wait.until(EC.alert_is_present())
driver.switch_to.alert
print(alert.text) # Вывод текста из алерта

В очень редких случаях, появляются алерты, где необходимо вводить какую-то информацию.
Сделать это можно используя ранее изученный нами метод send_keys()
В этом случае вызовем другой alert, который просит ввод данных, нажав на следующую кнопку:
Вот так выглядит алерт с вводом данных:
Пробуем ввести данные

...
# Клик на кнопку, которая вызывает alert
BUTTON_4 = ("xpath", "//button[@id='promtButton']")
wait.until(EC.element_to_be_clickable(BUTTON_4)).click()
alert = wait.until(EC.alert_is_present())
driver.switch_to.alert
# Ввод данных в alert
alert.send_keys("Hello world")

# Обязательно либо примите либо отклоните alert после вводад анных
alert.accept()
В результате мы увидим введенный нами текст после выполнения кода, на сайте специально сделана такая функция)

